{"version":3,"sources":["components/App/firebase.js","components/App/logo.png","components/Login/Login.js","components/App/useUser.js","components/DrawPrint/SettingsForm.js","components/App/config.js","components/DrawPrint/PlotViewer.js","components/DrawPrint/DrawPrint.js","components/Library/Library.js","components/Navigation/Navigation.js","components/Slicer/Slicer.js","components/DrawApp/Canvas/CanvasContext.js","components/DrawApp/Canvas/Canvas.js","components/DrawApp/Controls/SendToPrintButton.js","components/DrawApp/Controls/Controls.js","components/DrawApp/Header/Header.js","components/DrawApp/DrawApp.js","components/STLGenerator/SettingsForm.js","components/STLGenerator/Viewer.js","components/STLGenerator/STLGenerator.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","auth","db","firestore","storage","Login","setUser","useState","email","setEmail","password","setPassword","error","setError","handleSubmit","e","a","preventDefault","signInWithEmailAndPassword","then","user","catch","message","className","Form","onSubmit","src","logo","alt","width","Group","controlId","Label","Control","type","placeholder","onChange","target","value","Text","Button","UserContext","createContext","SettingsForm","updatePlot","setDrawSettings","as","Row","column","Col","size","step","defaultValue","delta","e_per_mm","z","f","print_size_mm","table_size_mm","offset_x","offset_y","min","max","tool","onClick","fiestaCloudBackend","PlotViewer","props","useEffect","plotData","data","layout","showlegend","xaxis","scaleanchor","scaleratio","height","window","innerHeight","Spinner","animation","role","reducer","state","item","getUserDrawingPlot","uid","settings","fetch","method","headers","body","JSON","stringify","json","getGcodeUrl","ref","child","storageUserDrawingGcodeRef","getDownloadURL","console","log","DrawPrint","user_id","useContext","gcodeFileUrl","setGcodeFileUrl","plot","setPlot","useReducer","drawSettings","mounted","url","parse","Container","fluid","sm","href","variant","download","disabled","Library","useStyles","createUseStyles","wrapper","padding","Navigation","classes","removeUser","Navbar","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","Slicer","CanvasContext","React","count","CanvasProvider","children","isPrepared","setPrepared","isDrawing","setIsDrawing","canvasRef","useRef","contextRef","x","setX","y","setY","stops","setStops","setCounter","Provider","prepareCanvas","canvas","current","canvasSize","Math","innerWidth","navbarHeight","style","context","getContext","scale","lineCap","strokeStyle","lineWidth","startDrawing","nativeEvent","offsetX","offsetY","beginPath","moveTo","finishDrawing","closePath","length","clearCanvas","fillStyle","fillRect","draw","lineTo","stroke","useCanvas","Canvas","onMouseDown","onMouseUp","onMouseMove","SendToPrintButton","isDisabled","setDisabled","sendToDB","collection","doc","set","SendButton","isLoading","setLoading","Controls","fixed","bg","Header","DrawApp","updateSTL","setStlSettings","text","depth","foundation_depth","foundation_offset","foundation_joiner_height","text_spacing","font","Viewer","stlUrl","aspectgRatio","rotationSpeeds","initControlPosition","backgroundColor","fetchRetry","options","retries","res","ok","Error","sendGenerateSTL","STLGenerator","setStlUrl","stlSettings","App","userString","localStorage","getItem","getUser","saveUser","setItem","useUser","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a2cbd6e.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nexport const firebaseConfig = {\r\n    apiKey: \"AIzaSyDsEXIV0OTzWuRX4XBiVB4a-3w4bP_fnCs\",\r\n    authDomain: \"chocolate-fiesta-cloud.firebaseapp.com\",\r\n    projectId: \"chocolate-fiesta-cloud\",\r\n    storageBucket: \"chocolate-fiesta-cloud.appspot.com\",\r\n    messagingSenderId: \"419100703725\",\r\n    appId: \"1:419100703725:web:42a642a456befea15045e4\"\r\n};\r\n\r\nexport const storageUserFolder = 'user';\r\nexport const firestoreUserDrawingCollection = 'user-drawing';\r\nexport const userDrawingGcodeFilename = 'drawing.gcode';\r\n\r\nexport const firestoreAutoId = () => {\r\n    const CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n  \r\n    let autoId = ''\r\n  \r\n    for (let i = 0; i < 20; i++) {\r\n      autoId += CHARS.charAt(\r\n        Math.floor(Math.random() * CHARS.length)\r\n      )\r\n    }\r\n    return autoId\r\n  }\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const auth = firebase.auth();\r\nexport const db = firebase.firestore();\r\nexport const storage = firebase.storage();\r\n\r\nexport const firestoreUserDrawingDocument = (uid) => {\r\n  return db.collection(firestoreUserDrawingCollection).doc(uid)\r\n}\r\n\r\nexport const storageUserDrawingGcodeRef = (uid) => {\r\n  return storage.ref(storageUserFolder).child(uid).child(userDrawingGcodeFilename)\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.8bc7b652.png\";","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Login.css';\r\nimport { auth } from '../App/firebase';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport logo from '../App/logo.png';\r\n\r\nexport default function Login({ setUser }) {\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    await auth.signInWithEmailAndPassword(email, password)\r\n      .then((user) => {\r\n        setUser(user);\r\n      })\r\n      .catch((error) => {\r\n        setError(error.message);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"text-center login-wrapper\">\r\n        <Form className=\"form-signin\" onSubmit={handleSubmit}>\r\n          <img className=\"mb-4\" src={logo} alt=\"\" width=\"120\"></img>\r\n          <h1 className=\"h3 mb-3 font-weight-normal\">Авторизация</h1>\r\n          <Form.Group controlId=\"inputEmail\">\r\n            <Form.Label className=\"sr-only\">Email адрес</Form.Label>\r\n            <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={e => setEmail(e.target.value)} />\r\n            <Form.Text className=\"text-danger\">\r\n              {error}\r\n            </Form.Text>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"inputPassword\">\r\n            <Form.Label className=\"sr-only\">Пароль</Form.Label>\r\n            <Form.Control type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)} />\r\n          </Form.Group>\r\n          <Button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\">\r\n            Войти\r\n        </Button>\r\n        </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nLogin.propTypes = {\r\n  setUser: PropTypes.func.isRequired\r\n};","import { useState, createContext } from 'react';\r\n\r\n\r\nexport const UserContext = createContext();\r\n\r\nexport function useUser() {\r\n  const getUser = () => {\r\n    const userString = localStorage.getItem('user');\r\n    const user = userString ? JSON.parse(userString) : null;\r\n    return user\r\n  };\r\n  const [user, setUser] = useState(getUser());\r\n\r\n  const saveUser = user => {\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    setUser(user);\r\n  };\r\n\r\n  const removeUser = () => {\r\n    saveUser(null);\r\n  };\r\n\r\n  return {\r\n    setUser: saveUser,\r\n    user,\r\n    removeUser\r\n  }\r\n}","import React from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport default function SettingsForm({updatePlot, setDrawSettings}) {\r\n\r\n    return (\r\n        <>\r\n            <Form>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column >Расстояние между узлами, мм</Form.Label>\r\n                    <Col >\r\n                        <Form.Control size=\"sm\" type=\"number\" step=\"0.1\" defaultValue=\"2.0\" onChange={e => setDrawSettings({ delta: e.target.value })} />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column >Экструзия, ед./мм</Form.Label>\r\n                    <Col >\r\n                        <Form.Control size=\"sm\" type=\"number\" step=\"0.01\" defaultValue=\"0.03\" onChange={e => setDrawSettings({ e_per_mm: e.target.value })} />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column >Z, мм</Form.Label>\r\n                    <Col >\r\n                        <Form.Control size=\"sm\" type=\"number\" step=\"0.01\" defaultValue=\"0.25\" onChange={e => setDrawSettings({ z: e.target.value })} />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column >Float</Form.Label>\r\n                    <Col >\r\n                        <Form.Control size=\"sm\" type=\"number\" step=\"10\" defaultValue=\"2400\" onChange={e => setDrawSettings({ f: e.target.value })} />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column >Размер печати, мм</Form.Label>\r\n                    <Col >\r\n                        <Form.Control size=\"sm\" type=\"number\" step=\"1\" defaultValue=\"120\" onChange={e => setDrawSettings({ print_size_mm: e.target.value })} />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column >Размер стола, мм</Form.Label>\r\n                    <Col >\r\n                        <Form.Control size=\"sm\" type=\"number\" step=\"1\" defaultValue=\"200\" onChange={e => setDrawSettings({ table_size_mm: e.target.value })} />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column >Оффсет X, мм</Form.Label>\r\n                    <Col >\r\n                        <Form.Control size=\"sm\" type=\"number\" step=\"1\" defaultValue=\"0\" onChange={e => setDrawSettings({ offset_x: e.target.value })} />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column >Оффсет Y, мм</Form.Label>\r\n                    <Col >\r\n                        <Form.Control size=\"sm\" type=\"number\" step=\"1\" defaultValue=\"0\" onChange={e => setDrawSettings({ offset_y: e.target.value })} />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column >Экструдер</Form.Label>\r\n                    <Col >\r\n                        <Form.Control size=\"sm\" type=\"number\" step=\"1\" min=\"0\" max=\"1\" defaultValue=\"0\" onChange={e => setDrawSettings({ tool: e.target.value })} />\r\n                    </Col>\r\n                </Form.Group>\r\n            </Form>\r\n            <Button onClick={() => updatePlot()}>Обновить</Button>\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","export const fiestaCloudBackend = 'http://92.223.65.161';","import React, {useEffect} from 'react';\r\nimport Plot from 'react-plotly.js';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nexport default function PlotViewer(props) {\r\n    useEffect(() => {}, [props.plotData]); \r\n\r\n    if (!props.plotData) {\r\n        return (<>\r\n            <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n        </>)\r\n      }\r\n  return (\r\n    <>\r\n        <Plot data={props.plotData.data} layout={{ showlegend: false, xaxis: { scaleanchor: \"y\", scaleratio: 1 }, height: window.innerHeight * 0.6 }} />\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext, useState, useEffect, useReducer } from 'react';\r\nimport { UserContext } from '../App/useUser'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport SettingsForm from './SettingsForm';\r\nimport { storageUserDrawingGcodeRef } from '../App/firebase'\r\nimport { fiestaCloudBackend } from '../App/config';\r\nimport PlotViewer from './PlotViewer';\r\n\r\nfunction reducer(state, item) {\r\n  return { ...state, ...item }\r\n}\r\n\r\nfunction getUserDrawingPlot(uid, settings) {\r\n  return fetch(fiestaCloudBackend + '/api/user/' + uid + \"/drawing/\", {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(settings)\r\n  })\r\n    .then(data => data.json())\r\n}\r\n\r\nfunction getGcodeUrl(uid) {\r\n  return storageUserDrawingGcodeRef(uid).getDownloadURL()\r\n    .catch(function (error) {\r\n      console.log(error)\r\n    })\r\n}\r\n\r\nexport default function DrawPrint() {\r\n  const { user } = useContext(UserContext);\r\n  const user_id = user.user.uid;\r\n  const [gcodeFileUrl, setGcodeFileUrl] = useState('#');\r\n  const [plot, setPlot] = useState('');\r\n  const [drawSettings, setDrawSettings] = useReducer(reducer, {});\r\n\r\n  function updatePlot() {\r\n    setPlot(null);\r\n    getUserDrawingPlot(user_id, drawSettings).then(data => setPlot(JSON.parse(data)));\r\n    getGcodeUrl(user_id).then(url => setGcodeFileUrl(url));\r\n  }\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    getGcodeUrl(user_id)\r\n      .then(url => {\r\n        if (mounted) {\r\n          setGcodeFileUrl(url)\r\n        }\r\n      })\r\n    getUserDrawingPlot(user_id, {})\r\n      .then(data => {\r\n        if (mounted) {\r\n          setPlot(JSON.parse(data));\r\n        }\r\n      })\r\n    return () => mounted = false;\r\n  }, [user_id])\r\n\r\n  return (\r\n    <>\r\n      <Container fluid=\"xl\">\r\n        <Row>\r\n          <Col sm={8}>\r\n            <PlotViewer plotData={plot}></PlotViewer>\r\n          </Col>\r\n          <Col sm={4} >\r\n          <SettingsForm updatePlot={updatePlot} setDrawSettings={setDrawSettings} />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col >\r\n          <Button as=\"a\" target=\"_blank\" href={gcodeFileUrl} className=\"control-button\" size=\"lg\" variant=\"primary\" download>Скачать GCODE</Button>\r\n              <Button as=\"a\" target=\"_blank\" href='/draw' className=\"control-button\" size=\"lg\" variant=\"secondary\">Рисование</Button>\r\n              <Button disabled={true} className=\"control-button\" variant=\"secondary\" size=\"lg\">Отправить в печать</Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Library() {\r\n  return(\r\n    <h2>Library</h2>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport { UserContext } from '../App/useUser';\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n    wrapper: {\r\n        padding: [15],\r\n    }\r\n});\r\n\r\nexport default function Navigation() {\r\n    const classes = useStyles();\r\n    const { user, removeUser } = useContext(UserContext);\r\n    console.log(user);\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <Navbar className=\"justify-content-between\" expand=\"lg\">\r\n                <Navbar.Brand href=\"/\">\r\n                    Chocolate Fiesta Cloud\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        {/* <Nav.Link href=\"/library\">Библиотека моделей</Nav.Link> */}\r\n                        <Nav.Link href=\"/draw-print\">Печать рисунка</Nav.Link>\r\n                        <Nav.Link href=\"/stl-generator\">Конструктор 3D текста</Nav.Link>\r\n                        {/* <Nav.Link href=\"#\">Слайсер</Nav.Link> */}\r\n                    </Nav>\r\n                    <Nav className=\"ml-auto\">\r\n                        <Nav.Link disabled={true}>Вы вошли как {user.user.email}</Nav.Link>\r\n                        <Nav.Link onClick={removeUser}>Выйти</Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './Slicer.css';\r\n\r\n\r\nexport default function Slicer() {\r\n    return (\r\n        <div className=\"dash-wrapper\">\r\n            <h2>Привет, это Chocolate Fiesta Cloud</h2>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useContext, useReducer, useRef, useState } from \"react\";\r\n\r\nexport const CanvasContext = React.createContext();\r\n\r\nfunction count(state) {\r\n  return state + 1\r\n}\r\n\r\nexport const CanvasProvider = ({ children }) => {\r\n  const [isPrepared, setPrepared] = useState(false)\r\n  const [isDrawing, setIsDrawing] = useState(false)\r\n  const canvasRef = useRef(null);\r\n  const contextRef = useRef(null);\r\n  const [x, setX] = useState([]);\r\n  const [y, setY] = useState([]);\r\n  const [stops, setStops] = useState([]);\r\n  const [counter, setCounter] = useReducer(count, 0)\r\n\r\n  const prepareCanvas = () => {\r\n    if (isPrepared) { return }\r\n    const navbarHeight = 64;\r\n    const canvas = canvasRef.current\r\n    const canvasSize = Math.min(window.innerWidth, window.innerHeight - navbarHeight * 2)\r\n    canvas.width = canvasSize * 2;\r\n    canvas.height = canvasSize * 2;\r\n    canvas.style.width = `${canvasSize}px`;\r\n    canvas.style.height = `${canvasSize}px`;\r\n\r\n    const context = canvas.getContext(\"2d\")\r\n    context.scale(2, 2);\r\n    context.lineCap = \"round\";\r\n    context.strokeStyle = \"brown\";\r\n    context.lineWidth = 14;\r\n    contextRef.current = context;\r\n    setPrepared(true);\r\n  };\r\n\r\n  const startDrawing = ({ nativeEvent }) => {\r\n    const { offsetX, offsetY } = nativeEvent;\r\n    contextRef.current.beginPath();\r\n    contextRef.current.moveTo(offsetX, offsetY);\r\n    setIsDrawing(true);\r\n  };\r\n\r\n  const finishDrawing = () => {\r\n    contextRef.current.closePath();\r\n    setIsDrawing(false);\r\n    setStops([...stops, x.length - 1]);\r\n  };\r\n\r\n  const draw = ({ nativeEvent }) => {\r\n    if (!isDrawing) {\r\n      return;\r\n    }\r\n    const { offsetX, offsetY } = nativeEvent;\r\n    contextRef.current.lineTo(offsetX, offsetY);\r\n    contextRef.current.stroke();\r\n    setX([...x, offsetX]);\r\n    setY([...y, offsetY]);\r\n    setCounter();\r\n  };\r\n\r\n  const clearCanvas = () => {\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext(\"2d\")\r\n    context.fillStyle = \"white\"\r\n    context.fillRect(0, 0, canvas.width, canvas.height)\r\n    setX([]);\r\n    setY([]);\r\n    setStops([]);\r\n  }\r\n\r\n  return (\r\n    <CanvasContext.Provider\r\n      value={{\r\n        canvasRef,\r\n        contextRef,\r\n        x,\r\n        y,\r\n        stops,\r\n        isPrepared,\r\n        prepareCanvas,\r\n        startDrawing,\r\n        finishDrawing,\r\n        clearCanvas,\r\n        draw\r\n      }}\r\n    >\r\n      {children}\r\n    </CanvasContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCanvas = () => useContext(CanvasContext);\r\n","import React, { useEffect } from \"react\";\r\nimport { useCanvas } from \"./CanvasContext\";\r\nimport \"./Canvas.css\";\r\n\r\nexport function Canvas() {\r\n  const {\r\n    canvasRef,\r\n    prepareCanvas,\r\n    startDrawing,\r\n    finishDrawing,\r\n    draw,\r\n  } = useCanvas();\r\n\r\n  useEffect(prepareCanvas, [prepareCanvas]);\r\n\r\n  return (\r\n    <canvas\r\n      onMouseDown={startDrawing}\r\n      onMouseUp={finishDrawing}\r\n      onMouseMove={draw}\r\n      ref={canvasRef}\r\n    />\r\n  );\r\n}","import React, { useContext, useState, useEffect } from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport \"./Controls.css\"\r\nimport { useCanvas } from '../Canvas/CanvasContext'\r\nimport { UserContext } from '../../App/useUser';\r\nimport { firestoreUserDrawingDocument } from '../../App/firebase'\r\n\r\n\r\nexport function SendToPrintButton() {\r\n  const { user } = useContext(UserContext);\r\n  const { x, y, stops } = useCanvas();\r\n  const [isDisabled, setDisabled] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setDisabled(false);\r\n  }, [x])\r\n\r\n  function sendToDB() {\r\n    return firestoreUserDrawingDocument(user.user.uid)\r\n      .set({\r\n        x: x,\r\n        y: y,\r\n        stops: stops\r\n      })\r\n  }\r\n\r\n  function SendButton() {\r\n    const [isLoading, setLoading] = useState(false);\r\n    \r\n    useEffect(() => {\r\n      if (isLoading) {\r\n        sendToDB().then(() => {\r\n          setLoading(false);\r\n          setDisabled(true);\r\n        });\r\n      }\r\n    }, [isLoading]);\r\n\r\n    const handleClick = () => {\r\n      setLoading(true);\r\n    }\r\n\r\n    return (\r\n      <Button\r\n        disabled={isLoading || isDisabled || x.length === 0}\r\n        className=\"control-button\" size=\"lg\" variant=\"success\"\r\n        onClick={!isLoading ? handleClick : null}\r\n      >\r\n        {isLoading ? 'Отправка...' : isDisabled ? 'Отправлено' : 'Отправить в печать'}\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  return (<SendButton />);\r\n}\r\n","import React from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport \"./Controls.css\"\r\nimport { useCanvas } from '../Canvas/CanvasContext'\r\nimport { SendToPrintButton } from \"./SendToPrintButton\";\r\n\r\nexport function Controls() {\r\n  const { x, clearCanvas } = useCanvas()\r\n  return (\r\n    <>\r\n      <div className=\"controls-wrapper\">\r\n        <Navbar fixed=\"bottom\" bg=\"dark\" className=\"justify-content-center\">\r\n          <Nav>\r\n            <Button onClick={clearCanvas} disabled={x.length === 0} className=\"control-button\" size=\"lg\" variant=\"light\">Очистить</Button>\r\n            <SendToPrintButton />\r\n          </Nav>\r\n        </Navbar>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\n\r\nexport function Header() {\r\n    return (\r\n        <>\r\n            <div>\r\n                <Navbar bg=\"dark\" variant=\"dark\" className=\"justify-content-center\">\r\n                    <Navbar.Brand href=\"/\">\r\n                        Chocolate Fiesta Draw\r\n                    </Navbar.Brand>\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"ml-auto\">\r\n                            <Nav.Link href=\"/draw-print\">Перейти к печати</Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport { Canvas } from './Canvas/Canvas'\r\nimport { Controls } from './Controls/Controls'\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport { CanvasProvider } from \"./Canvas/CanvasContext\";\r\nimport { firebaseConfig } from '../App/firebase'\r\nimport { FirestoreProvider } from \"@react-firebase/firestore\";\r\nimport \"./DrawApp.css\"\r\nimport { Header } from './Header/Header';\r\n\r\n\r\nfunction DrawApp() {\r\n  return (\r\n    <>\r\n    <div className=\"draw-app-wrapper\">\r\n      <FirestoreProvider {...firebaseConfig} firebase={firebase}>\r\n        <CanvasProvider>\r\n          <Header />\r\n          <Canvas />\r\n          <Controls />\r\n        </CanvasProvider>\r\n      </FirestoreProvider>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DrawApp;\r\n","import React from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport default function SettingsForm({updateSTL, setStlSettings}) {\r\n\r\n    return (\r\n        <>\r\n            <Form>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column >Текст</Form.Label>\r\n                    <Col >\r\n                        <Form.Control size=\"sm\" type=\"text\" defaultValue=\"Chocolate Fiesta\" onChange={e => setStlSettings({ text: e.target.value })} />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column >Высота изделия, мм</Form.Label>\r\n                    <Col >\r\n                        <Form.Control size=\"sm\" type=\"number\" step=\"1\" defaultValue=\"5\" onChange={e => setStlSettings({ depth: e.target.value })} />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column >Размер изделия, мм</Form.Label>\r\n                    <Col >\r\n                        <Form.Control size=\"sm\" type=\"number\" step=\"1\" defaultValue=\"100\" onChange={e => setStlSettings({ width: e.target.value })} />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column >Высота (z) подложки, мм</Form.Label>\r\n                    <Col >\r\n                        <Form.Control size=\"sm\" type=\"number\" step=\"10\" defaultValue=\"2\" onChange={e => setStlSettings({ foundation_depth: e.target.value })} />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column >Размер подложки, мм</Form.Label>\r\n                    <Col >\r\n                        <Form.Control size=\"sm\" type=\"number\" step=\"0.1\" defaultValue=\"2\" onChange={e => setStlSettings({ foundation_offset: e.target.value })} />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column >Ширина подложки-соединителя слов, мм</Form.Label>\r\n                    <Col >\r\n                        <Form.Control size=\"sm\" type=\"number\" step=\"1\" defaultValue=\"7\" onChange={e => setStlSettings({ foundation_joiner_height: e.target.value })} />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column >Межбуквенное расстояние</Form.Label>\r\n                    <Col >\r\n                        <Form.Control size=\"sm\" type=\"number\" defaultValue=\"1.0\" onChange={e => setStlSettings({ text_spacing: e.target.value })} />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column >Шрифт</Form.Label>\r\n                    <Col >\r\n                        <Form.Control size=\"sm\" type=\"text\" defaultValue=\"Pacifico:style=Bold\" onChange={e => setStlSettings({ font: e.target.value })} />\r\n                    </Col>\r\n                </Form.Group>\r\n            </Form>\r\n            <Button onClick={() => updateSTL()}>Сгенерировать</Button>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","import { ModelViewer } from 'react-3d-model-viewer'\r\nimport React, { useEffect } from 'react';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport \"./STLGenerator.css\"\r\n\r\nexport default function Viewer(props) {\r\n    useEffect(() => {}, [props.stlUrl]); \r\n\r\n    if (props.stlUrl === '') {\r\n        return (<>\r\n            <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n        </>)\r\n      }\r\n  return (\r\n        <>\r\n            <ModelViewer width=\"100%\" aspectgRatio=\"100%\" rotationSpeeds={[0,0,0]} initControlPosition={[0, 0, 0.4]} backgroundColor=\"#ffffff\" url={props.stlUrl} />\r\n        </>\r\n  );\r\n}\r\n","import React, { useContext, useState, useEffect, useReducer } from 'react';\r\nimport { UserContext } from '../App/useUser'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nimport SettingsForm from './SettingsForm';\r\nimport \"./STLGenerator.css\"\r\nimport { fiestaCloudBackend } from '../App/config';\r\nimport Viewer from './Viewer';\r\n\r\nfunction reducer(state, item) {\r\n  return { ...state, ...item }\r\n}\r\n\r\nfunction fetchRetry(url, options = {}, retries = 3) {\r\n  return fetch(url, options)\r\n    .then(res => {\r\n      if (res.ok) return res.json()\r\n      if (retries > 0) {\r\n        return fetchRetry(url, options, retries - 1)\r\n      } else {\r\n        throw new Error(res)\r\n      }\r\n    })\r\n    .catch(error => {\r\n      if (retries > 0) {\r\n        return fetchRetry(url, options, retries - 1)\r\n      } else {\r\n        throw new Error(error)\r\n      }\r\n    }\r\n    )\r\n}\r\n\r\nfunction sendGenerateSTL(uid, settings) {\r\n  return fetchRetry(fiestaCloudBackend + '/api/stl-generator/', {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(settings),\r\n  })\r\n    .catch(error => console.log(error))\r\n    .then(data => data)\r\n}\r\n\r\nexport default function STLGenerator() {\r\n  const { user } = useContext(UserContext);\r\n  const user_id = user.user.uid;\r\n  const [stlUrl, setStlUrl] = useState('');\r\n  const [stlSettings, setStlSettings] = useReducer(reducer, {});\r\n\r\n  function updateSTL() {\r\n    setStlUrl('');\r\n    sendGenerateSTL(user_id, stlSettings).then(data => { if (data) setStlUrl(data.url) });\r\n  }\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    sendGenerateSTL(user_id, {}).then(data => {\r\n      if (mounted && data != null) {\r\n        setStlUrl(data.url)\r\n      }\r\n    });\r\n    return () => mounted = false;\r\n  }, [user_id])\r\n\r\n  return (\r\n    <>\r\n      <Container fluid=\"xl\" className=\"stl-generator-wrapper\">\r\n        <Row>\r\n          <Col sm={7}>\r\n            <Viewer stlUrl={stlUrl}></Viewer>\r\n          </Col>\r\n          <Col sm={5} >\r\n            <SettingsForm updateSTL={updateSTL} setStlSettings={setStlSettings} />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col >\r\n            <Button as=\"a\" target=\"_blank\" href={stlUrl} className=\"control-button\" size=\"lg\" variant=\"primary\" download>Скачать STL</Button>\r\n            <Button disabled={true} className=\"control-button\" size=\"lg\" variant=\"primary\">Отправить в печать</Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nimport './App.css';\r\nimport Login from '../Login/Login';\r\nimport DrawPrint from '../DrawPrint/DrawPrint';\r\nimport Library from '../Library/Library';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport Slicer from '../Slicer/Slicer';\r\nimport { useUser, UserContext } from './useUser';\r\nimport DrawApp from '../DrawApp/DrawApp';\r\nimport STLGenerator from '../STLGenerator/STLGenerator';\r\n\r\nfunction App() {\r\n  const { user, setUser, removeUser } = useUser();\r\n\r\n  if (!user) {\r\n    return <Login setUser={setUser} />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <UserContext.Provider value={{ user, setUser, removeUser }} >\r\n\r\n        <BrowserRouter>\r\n          <Switch>\r\n            <Route exact path=\"/draw\">\r\n              <DrawApp />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Navigation />\r\n              <Route exact path=\"/\">\r\n                {/* <Library /> */}\r\n                <DrawPrint />\r\n              </Route>\r\n              <Route path=\"/draw-print\">\r\n                <DrawPrint />\r\n              </Route>\r\n              <Route path=\"/library\">\r\n                <Library />\r\n              </Route>\r\n              <Route path=\"/slicer\">\r\n                <Slicer />\r\n              </Route>\r\n              <Route path=\"/stl-generator\">\r\n                <STLGenerator />\r\n              </Route>\r\n            </Route>\r\n\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </UserContext.Provider>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}