{"version":3,"sources":["components/App/firebase.js","components/App/logo.png","components/Login/Login.js","components/App/useUser.js","components/DrawPrint/SettingsForm.js","components/App/config.js","components/DrawPrint/PlotViewer.js","components/DrawPrint/DrawPrint.js","components/Library/Library.js","components/Navigation/Navigation.js","components/Slicer/Slicer.js","components/DrawApp/Canvas/CanvasContext.js","components/DrawApp/Canvas/Canvas.js","components/DrawApp/Controls/SendToPrintButton.js","components/DrawApp/Controls/Controls.js","components/DrawApp/Header/Header.js","components/DrawApp/DrawApp.js","components/STLGenerator/SettingsForm.js","components/STLGenerator/Viewer.js","components/STLGenerator/STLGenerator.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","auth","db","firestore","storage","analytics","Login","setUser","useState","email","setEmail","password","setPassword","error","setError","handleSubmit","e","a","preventDefault","signInWithEmailAndPassword","then","user","catch","message","className","Form","onSubmit","src","logo","alt","width","Group","controlId","Label","Control","type","placeholder","onChange","target","value","Text","Button","UserContext","createContext","SettingsForm","updatePlot","setDrawSettings","as","Row","column","Col","size","step","defaultValue","delta","e_per_mm","z","f","print_size_mm","table_size_mm","offset_x","offset_y","min","max","tool","onClick","fiestaCloudBackend","PlotViewer","props","useEffect","plotData","fetchError","Alert","variant","data","layout","showlegend","xaxis","scaleanchor","scaleratio","height","window","innerHeight","Spinner","animation","role","reducer","state","item","getGcodeUrl","uid","ref","child","storageUserDrawingGcodeRef","getDownloadURL","console","log","DrawPrint","user_id","useContext","gcodeFileUrl","setGcodeFileUrl","plot","setPlot","setFetchError","useReducer","drawSettings","getUserDrawingPlot","settings","fetch","method","headers","body","JSON","stringify","res","status","json","Error","parse","Sentry","mounted","url","Container","fluid","sm","href","download","disabled","Library","useStyles","createUseStyles","wrapper","padding","Navigation","classes","removeUser","Navbar","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","Slicer","CanvasContext","React","CanvasProvider","children","isPrepared","setPrepared","isDrawing","setIsDrawing","canvasRef","useRef","contextRef","x","setX","y","setY","stops","setStops","getEventPosition","nativeEvent","offsetX","offsetY","rect","getBoundingClientRect","touches","pageX","left","pageY","top","Provider","prepareCanvas","canvas","current","canvasSize","Math","innerWidth","navbarHeight","style","context","getContext","scale","lineCap","strokeStyle","lineWidth","startDrawing","beginPath","moveTo","finishDrawing","closePath","length","clearCanvas","fillStyle","fillRect","draw","lineTo","stroke","useCanvas","Canvas","onMouseDown","onMouseUp","onMouseMove","onTouchStart","onTouchEnd","onTouchMove","SendToPrintButton","isDisabled","setDisabled","sendToDB","collection","doc","set","SendButton","isLoading","setLoading","Controls","fixed","bg","Header","DrawApp","updateSTL","setStlSettings","text","depth","foundation_depth","foundation_offset","foundation_joiner_height","text_spacing","font","Viewer","stlUrl","fetchStlError","aspectgRatio","rotationSpeeds","initControlPosition","backgroundColor","fetchRetry","options","retries","ok","STLGenerator","setStlUrl","stlSettings","setfetchStlError","sendGenerateSTL","App","userString","localStorage","getItem","getUser","saveUser","setItem","useUser","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ccfad70d.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\nimport \"firebase/analytics\";\r\n\r\n\r\nexport const firebaseConfig = {\r\n    apiKey: \"AIzaSyDsEXIV0OTzWuRX4XBiVB4a-3w4bP_fnCs\",\r\n    authDomain: \"chocolate-fiesta-cloud.firebaseapp.com\",\r\n    projectId: \"chocolate-fiesta-cloud\",\r\n    storageBucket: \"chocolate-fiesta-cloud.appspot.com\",\r\n    messagingSenderId: \"419100703725\",\r\n    appId: \"1:419100703725:web:42a642a456befea15045e4\",\r\n    measurementId: \"G-FRZNRK641V\"\r\n};\r\n\r\nexport const storageUserFolder = 'user';\r\nexport const firestoreUserDrawingCollection = 'user-drawing';\r\nexport const userDrawingGcodeFilename = 'drawing.gcode';\r\n\r\nexport const firestoreAutoId = () => {\r\n    const CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n  \r\n    let autoId = ''\r\n  \r\n    for (let i = 0; i < 20; i++) {\r\n      autoId += CHARS.charAt(\r\n        Math.floor(Math.random() * CHARS.length)\r\n      )\r\n    }\r\n    return autoId\r\n  }\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const auth = firebase.auth();\r\nexport const db = firebase.firestore();\r\nexport const storage = firebase.storage();\r\nexport const analytics = firebase.analytics();\r\n\r\nexport const firestoreUserDrawingDocument = (uid) => {\r\n  return db.collection(firestoreUserDrawingCollection).doc(uid)\r\n}\r\n\r\nexport const storageUserDrawingGcodeRef = (uid) => {\r\n  return storage.ref(storageUserFolder).child(uid).child(userDrawingGcodeFilename)\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.8bc7b652.png\";","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Login.css';\r\nimport { auth } from '../App/firebase';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport logo from '../App/logo.png';\r\n\r\nexport default function Login({ setUser }) {\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    await auth.signInWithEmailAndPassword(email, password)\r\n      .then((user) => {\r\n        setUser(user);\r\n      })\r\n      .catch((error) => {\r\n        setError(error.message);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"text-center login-wrapper\">\r\n        <Form className=\"form-signin\" onSubmit={handleSubmit}>\r\n          <img className=\"mb-4\" src={logo} alt=\"\" width=\"120\"></img>\r\n          <h1 className=\"h3 mb-3 font-weight-normal\">Авторизация</h1>\r\n          <Form.Group controlId=\"inputEmail\">\r\n            <Form.Label className=\"sr-only\">Email адрес</Form.Label>\r\n            <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={e => setEmail(e.target.value)} />\r\n            <Form.Text className=\"text-danger\">\r\n              {error}\r\n            </Form.Text>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"inputPassword\">\r\n            <Form.Label className=\"sr-only\">Пароль</Form.Label>\r\n            <Form.Control type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)} />\r\n          </Form.Group>\r\n          <Button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\">\r\n            Войти\r\n        </Button>\r\n        </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nLogin.propTypes = {\r\n  setUser: PropTypes.func.isRequired\r\n};","import { useState, createContext } from 'react';\r\n\r\n\r\nexport const UserContext = createContext();\r\n\r\nexport function useUser() {\r\n  const getUser = () => {\r\n    const userString = localStorage.getItem('user');\r\n    const user = userString ? JSON.parse(userString) : null;\r\n    return user\r\n  };\r\n  const [user, setUser] = useState(getUser());\r\n\r\n  const saveUser = user => {\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    setUser(user);\r\n  };\r\n\r\n  const removeUser = () => {\r\n    saveUser(null);\r\n  };\r\n\r\n  return {\r\n    setUser: saveUser,\r\n    user,\r\n    removeUser\r\n  }\r\n}","import React from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport default function SettingsForm({updatePlot, setDrawSettings}) {\r\n\r\n    return (\r\n        <>\r\n            <Form>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column >Расстояние между узлами, мм</Form.Label>\r\n                    <Col >\r\n                        <Form.Control size=\"sm\" type=\"number\" step=\"0.1\" defaultValue=\"2.0\" onChange={e => setDrawSettings({ delta: e.target.value })} />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column >Экструзия, ед./мм</Form.Label>\r\n                    <Col >\r\n                        <Form.Control size=\"sm\" type=\"number\" step=\"0.01\" defaultValue=\"0.03\" onChange={e => setDrawSettings({ e_per_mm: e.target.value })} />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column >Z, мм</Form.Label>\r\n                    <Col >\r\n                        <Form.Control size=\"sm\" type=\"number\" step=\"0.01\" defaultValue=\"0.25\" onChange={e => setDrawSettings({ z: e.target.value })} />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column >Float</Form.Label>\r\n                    <Col >\r\n                        <Form.Control size=\"sm\" type=\"number\" step=\"10\" defaultValue=\"2400\" onChange={e => setDrawSettings({ f: e.target.value })} />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column >Размер печати, мм</Form.Label>\r\n                    <Col >\r\n                        <Form.Control size=\"sm\" type=\"number\" step=\"1\" defaultValue=\"120\" onChange={e => setDrawSettings({ print_size_mm: e.target.value })} />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column >Размер стола, мм</Form.Label>\r\n                    <Col >\r\n                        <Form.Control size=\"sm\" type=\"number\" step=\"1\" defaultValue=\"200\" onChange={e => setDrawSettings({ table_size_mm: e.target.value })} />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column >Оффсет X, мм</Form.Label>\r\n                    <Col >\r\n                        <Form.Control size=\"sm\" type=\"number\" step=\"1\" defaultValue=\"0\" onChange={e => setDrawSettings({ offset_x: e.target.value })} />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column >Оффсет Y, мм</Form.Label>\r\n                    <Col >\r\n                        <Form.Control size=\"sm\" type=\"number\" step=\"1\" defaultValue=\"0\" onChange={e => setDrawSettings({ offset_y: e.target.value })} />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column >Экструдер</Form.Label>\r\n                    <Col >\r\n                        <Form.Control size=\"sm\" type=\"number\" step=\"1\" min=\"0\" max=\"1\" defaultValue=\"0\" onChange={e => setDrawSettings({ tool: e.target.value })} />\r\n                    </Col>\r\n                </Form.Group>\r\n            </Form>\r\n            <Button onClick={() => updatePlot()}>Обновить</Button>\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","export const fiestaCloudBackend = 'https://api.chocolatefiesta.ru';","import React, {useEffect} from 'react';\r\nimport Plot from 'react-plotly.js';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\n\r\nexport default function PlotViewer(props) {\r\n    useEffect(() => {}, [props.plotData, props.fetchError]); \r\n\r\n    if (props.fetchError) {\r\n        return (<>\r\n            <Alert variant='danger'>\r\n                {props.fetchError}\r\n            </Alert>\r\n        </>)\r\n    }\r\n\r\n    if (!props.plotData) {\r\n        return (<>\r\n            <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n        </>)\r\n      }\r\n  return (\r\n    <>\r\n        <Plot data={props.plotData.data} layout={{ showlegend: false, xaxis: { scaleanchor: \"y\", scaleratio: 1 }, height: window.innerHeight * 0.6 }} />\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext, useState, useEffect, useReducer } from 'react';\r\nimport { UserContext } from '../App/useUser'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport SettingsForm from './SettingsForm';\r\nimport { storageUserDrawingGcodeRef } from '../App/firebase'\r\nimport { fiestaCloudBackend } from '../App/config';\r\nimport PlotViewer from './PlotViewer';\r\nimport * as Sentry from \"@sentry/react\";\r\n\r\n\r\nfunction reducer(state, item) {\r\n  return { ...state, ...item }\r\n}\r\n\r\nfunction getGcodeUrl(uid) {\r\n  return storageUserDrawingGcodeRef(uid).getDownloadURL()\r\n    .catch(function (error) {\r\n      console.log(error)\r\n    })\r\n}\r\n\r\nexport default function DrawPrint() {\r\n  const { user } = useContext(UserContext);\r\n  const user_id = user.user.uid;\r\n  const [gcodeFileUrl, setGcodeFileUrl] = useState('#');\r\n  const [plot, setPlot] = useState(null);\r\n  const [fetchError, setFetchError] = useState(null);\r\n  const [drawSettings, setDrawSettings] = useReducer(reducer, {});\r\n\r\n  function getUserDrawingPlot(uid, settings) {\r\n    setFetchError(null);\r\n    setFetchError(null);\r\n    setPlot(null);\r\n    return fetch(fiestaCloudBackend + '/api/user/' + uid + \"/drawing/\", {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(settings)\r\n    })\r\n      .then(res => {\r\n        console.log(res)\r\n        if (res.status === 201 | res.status === 200) {\r\n          return res.json()\r\n        } else if (res.status === 204) {\r\n          setFetchError('Рисунок не найден. Перейдите на страницу \"Рисование\" и отправьте рисунок в печать');\r\n        } else {\r\n          setFetchError('Ошибка загрузки рисунка. Попробуйте позже.');\r\n        }\r\n        throw new Error(res)\r\n      })\r\n      .then(data => {\r\n        setPlot(JSON.parse(data))\r\n      })\r\n      .catch(error => {\r\n        Sentry.captureException(new Error(error));\r\n      })\r\n  }\r\n\r\n  function updatePlot() {\r\n    getUserDrawingPlot(user_id, drawSettings)\r\n    getGcodeUrl(user_id).then(url => setGcodeFileUrl(url));\r\n  }\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    getGcodeUrl(user_id)\r\n      .then(url => {\r\n        if (mounted) {\r\n          setGcodeFileUrl(url)\r\n        }\r\n      })\r\n    getUserDrawingPlot(user_id, {})\r\n    return () => mounted = false;\r\n  }, [user_id])\r\n\r\n  return (\r\n    <>\r\n      <Container fluid=\"xl\">\r\n        <Row>\r\n          <Col sm={8}>\r\n            <PlotViewer fetchError={fetchError} plotData={plot}></PlotViewer>\r\n          </Col>\r\n          <Col sm={4} >\r\n            <SettingsForm updatePlot={updatePlot} setDrawSettings={setDrawSettings} />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col >\r\n            <Button as=\"a\" target=\"_blank\" href={gcodeFileUrl} className=\"control-button\" size=\"lg\" variant=\"primary\" download>Скачать GCODE</Button>\r\n            <Button as=\"a\" target=\"_blank\" href='/draw' className=\"control-button\" size=\"lg\" variant=\"secondary\">Рисование</Button>\r\n            <Button disabled={true} className=\"control-button\" variant=\"secondary\" size=\"lg\">Отправить в печать</Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Library() {\r\n  return(\r\n    <h2>Library</h2>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport { UserContext } from '../App/useUser';\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n    wrapper: {\r\n        padding: [15],\r\n    }\r\n});\r\n\r\nexport default function Navigation() {\r\n    const classes = useStyles();\r\n    const { user, removeUser } = useContext(UserContext);\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <Navbar className=\"justify-content-between\" expand=\"lg\">\r\n                <Navbar.Brand href=\"/\">\r\n                    Chocolate Fiesta Cloud β\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        {/* <Nav.Link href=\"/library\">Библиотека моделей</Nav.Link> */}\r\n                        <Nav.Link href=\"/draw-print\">Печать рисунка</Nav.Link>\r\n                        <Nav.Link href=\"/stl-generator\">Конструктор 3D текста</Nav.Link>\r\n                        {/* <Nav.Link href=\"#\">Слайсер</Nav.Link> */}\r\n                    </Nav>\r\n                    <Nav className=\"ml-auto\">\r\n                        <Nav.Link disabled={true}>Вы вошли как {user.user.email}</Nav.Link>\r\n                        <Nav.Link onClick={removeUser}>Выйти</Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './Slicer.css';\r\n\r\n\r\nexport default function Slicer() {\r\n    return (\r\n        <div className=\"dash-wrapper\">\r\n            <h2>Привет, это Chocolate Fiesta Cloud</h2>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useContext, useRef, useState } from \"react\";\r\n\r\nexport const CanvasContext = React.createContext();\r\n\r\n\r\nexport const CanvasProvider = ({ children }) => {\r\n  const [isPrepared, setPrepared] = useState(false)\r\n  const [isDrawing, setIsDrawing] = useState(false)\r\n  const canvasRef = useRef(null);\r\n  const contextRef = useRef(null);\r\n  const [x, setX] = useState([]);\r\n  const [y, setY] = useState([]);\r\n  const [stops, setStops] = useState([]);\r\n\r\n  const prepareCanvas = () => {\r\n    if (isPrepared) { return }\r\n    const navbarHeight = 64;\r\n    const canvas = canvasRef.current\r\n    const canvasSize = Math.min(window.innerWidth, window.innerHeight - navbarHeight * 2)\r\n    canvas.width = canvasSize * 2;\r\n    canvas.height = canvasSize * 2;\r\n    canvas.style.width = `${canvasSize}px`;\r\n    canvas.style.height = `${canvasSize}px`;\r\n\r\n    const context = canvas.getContext(\"2d\")\r\n    context.scale(2, 2);\r\n    context.lineCap = \"round\";\r\n    context.strokeStyle = \"brown\";\r\n    context.lineWidth = 14;\r\n    contextRef.current = context;\r\n    setPrepared(true);\r\n  };\r\n\r\n  const startDrawing = ({ nativeEvent }) => {\r\n    const { offsetX, offsetY } = getEventPosition(nativeEvent);\r\n    contextRef.current.beginPath();\r\n    contextRef.current.moveTo(offsetX, offsetY);\r\n    setIsDrawing(true);\r\n  };\r\n\r\n  const finishDrawing = () => {\r\n    contextRef.current.closePath();\r\n    setIsDrawing(false);\r\n    setStops([...stops, x.length - 1]);\r\n  };\r\n\r\n  const draw = ({ nativeEvent }) => {\r\n    if (!isDrawing) {\r\n      return;\r\n    }\r\n    const { offsetX, offsetY } = getEventPosition(nativeEvent);\r\n    contextRef.current.lineTo(offsetX, offsetY);\r\n    contextRef.current.stroke();\r\n    setX([...x, offsetX]);\r\n    setY([...y, offsetY]);\r\n  };\r\n\r\n  const getEventPosition = (nativeEvent) => {\r\n    console.log(nativeEvent.type);\r\n    if (nativeEvent.type === \"mousemove\" || nativeEvent.type === \"mousedown\") {\r\n      const { offsetX, offsetY } = nativeEvent;\r\n      return {offsetX, offsetY}\r\n    } else if (nativeEvent.type === \"touchstart\" || nativeEvent.type === \"touchmove\") {\r\n      const rect = nativeEvent.target.getBoundingClientRect(); \r\n      const offsetX = nativeEvent.touches[0].pageX - rect.left;\r\n      const offsetY = nativeEvent.touches[0].pageY - rect.top;;\r\n      return {offsetX, offsetY}\r\n    }\r\n  };\r\n\r\n  const clearCanvas = () => {\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext(\"2d\")\r\n    context.fillStyle = \"white\"\r\n    context.fillRect(0, 0, canvas.width, canvas.height)\r\n    setX([]);\r\n    setY([]);\r\n    setStops([]);\r\n  }\r\n\r\n  return (\r\n    <CanvasContext.Provider\r\n      value={{\r\n        canvasRef,\r\n        contextRef,\r\n        x,\r\n        y,\r\n        stops,\r\n        isPrepared,\r\n        prepareCanvas,\r\n        startDrawing,\r\n        finishDrawing,\r\n        clearCanvas,\r\n        draw\r\n      }}\r\n    >\r\n      {children}\r\n    </CanvasContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCanvas = () => useContext(CanvasContext);\r\n","import React, { useEffect } from \"react\";\r\nimport { useCanvas } from \"./CanvasContext\";\r\nimport \"./Canvas.css\";\r\n\r\nexport function Canvas() {\r\n  const {\r\n    canvasRef,\r\n    prepareCanvas,\r\n    startDrawing,\r\n    finishDrawing,\r\n    draw,\r\n  } = useCanvas();\r\n\r\n  useEffect(prepareCanvas, [prepareCanvas]);\r\n\r\n  return (\r\n    <canvas\r\n      onMouseDown={startDrawing}\r\n      onMouseUp={finishDrawing}\r\n      onMouseMove={draw}\r\n\r\n      onTouchStart={startDrawing}\r\n      onTouchEnd={finishDrawing}\r\n      onTouchMove={draw}\r\n\r\n      ref={canvasRef}\r\n    />\r\n  );\r\n}","import React, { useContext, useState, useEffect } from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport \"./Controls.css\"\r\nimport { useCanvas } from '../Canvas/CanvasContext'\r\nimport { UserContext } from '../../App/useUser';\r\nimport { firestoreUserDrawingDocument } from '../../App/firebase'\r\n\r\n\r\nexport function SendToPrintButton() {\r\n  const { user } = useContext(UserContext);\r\n  const { x, y, stops } = useCanvas();\r\n  const [isDisabled, setDisabled] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setDisabled(false);\r\n  }, [x])\r\n\r\n  function sendToDB() {\r\n    return firestoreUserDrawingDocument(user.user.uid)\r\n      .set({\r\n        x: x,\r\n        y: y,\r\n        stops: stops\r\n      })\r\n  }\r\n\r\n  function SendButton() {\r\n    const [isLoading, setLoading] = useState(false);\r\n    \r\n    useEffect(() => {\r\n      if (isLoading) {\r\n        sendToDB().then(() => {\r\n          setLoading(false);\r\n          setDisabled(true);\r\n        });\r\n      }\r\n    }, [isLoading]);\r\n\r\n    const handleClick = () => {\r\n      setLoading(true);\r\n    }\r\n\r\n    return (\r\n      <Button\r\n        disabled={isLoading || isDisabled || x.length === 0}\r\n        className=\"control-button\" size=\"lg\" variant=\"success\"\r\n        onClick={!isLoading ? handleClick : null}\r\n      >\r\n        {isLoading ? 'Отправка...' : isDisabled ? 'Отправлено' : 'Отправить в печать'}\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  return (<SendButton />);\r\n}\r\n","import React from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport \"./Controls.css\"\r\nimport { useCanvas } from '../Canvas/CanvasContext'\r\nimport { SendToPrintButton } from \"./SendToPrintButton\";\r\n\r\nexport function Controls() {\r\n  const { x, clearCanvas } = useCanvas()\r\n  return (\r\n    <>\r\n      <div className=\"controls-wrapper\">\r\n        <Navbar fixed=\"bottom\" bg=\"dark\" className=\"justify-content-center\">\r\n          <Nav>\r\n            <Button onClick={clearCanvas} disabled={x.length === 0} className=\"control-button\" size=\"lg\" variant=\"light\">Очистить</Button>\r\n            <SendToPrintButton />\r\n          </Nav>\r\n        </Navbar>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\n\r\nexport function Header() {\r\n    return (\r\n        <>\r\n            <div>\r\n                <Navbar bg=\"dark\" variant=\"dark\" className=\"justify-content-center\">\r\n                    <Navbar.Brand href=\"/\">\r\n                        Chocolate Fiesta Draw\r\n                    </Navbar.Brand>\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"ml-auto\">\r\n                            <Nav.Link href=\"/draw-print\">Перейти к печати</Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport { Canvas } from './Canvas/Canvas'\r\nimport { Controls } from './Controls/Controls'\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport { CanvasProvider } from \"./Canvas/CanvasContext\";\r\nimport { firebaseConfig } from '../App/firebase'\r\nimport { FirestoreProvider } from \"@react-firebase/firestore\";\r\nimport \"./DrawApp.css\"\r\nimport { Header } from './Header/Header';\r\n\r\n\r\nfunction DrawApp() {\r\n  return (\r\n    <>\r\n    <div className=\"draw-app-wrapper\">\r\n      <FirestoreProvider {...firebaseConfig} firebase={firebase}>\r\n        <CanvasProvider>\r\n          <Header />\r\n          <Canvas />\r\n          <Controls />\r\n        </CanvasProvider>\r\n      </FirestoreProvider>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DrawApp;\r\n","import React from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport default function SettingsForm({updateSTL, setStlSettings}) {\r\n\r\n    return (\r\n        <>\r\n            <Form>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column >Текст</Form.Label>\r\n                    <Col >\r\n                        <Form.Control size=\"sm\" type=\"text\" defaultValue=\"Chocolate Fiesta\" onChange={e => setStlSettings({ text: e.target.value })} />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column >Высота изделия, мм</Form.Label>\r\n                    <Col >\r\n                        <Form.Control size=\"sm\" type=\"number\" step=\"1\" defaultValue=\"5\" onChange={e => setStlSettings({ depth: e.target.value })} />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column >Размер изделия, мм</Form.Label>\r\n                    <Col >\r\n                        <Form.Control size=\"sm\" type=\"number\" step=\"1\" defaultValue=\"100\" onChange={e => setStlSettings({ width: e.target.value })} />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column >Высота (z) подложки, мм</Form.Label>\r\n                    <Col >\r\n                        <Form.Control size=\"sm\" type=\"number\" step=\"10\" defaultValue=\"2\" onChange={e => setStlSettings({ foundation_depth: e.target.value })} />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column >Размер подложки, мм</Form.Label>\r\n                    <Col >\r\n                        <Form.Control size=\"sm\" type=\"number\" step=\"0.1\" defaultValue=\"2\" onChange={e => setStlSettings({ foundation_offset: e.target.value })} />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column >Ширина подложки-соединителя слов, мм</Form.Label>\r\n                    <Col >\r\n                        <Form.Control size=\"sm\" type=\"number\" step=\"1\" defaultValue=\"7\" onChange={e => setStlSettings({ foundation_joiner_height: e.target.value })} />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column >Межбуквенное расстояние</Form.Label>\r\n                    <Col >\r\n                        <Form.Control size=\"sm\" type=\"number\" defaultValue=\"1.0\" onChange={e => setStlSettings({ text_spacing: e.target.value })} />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column >Шрифт</Form.Label>\r\n                    <Col >\r\n                        <Form.Control size=\"sm\" type=\"text\" defaultValue=\"Pacifico:style=Bold\" onChange={e => setStlSettings({ font: e.target.value })} />\r\n                    </Col>\r\n                </Form.Group>\r\n            </Form>\r\n            <Button onClick={() => updateSTL()}>Сгенерировать</Button>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","import { ModelViewer } from 'react-3d-model-viewer'\r\nimport React, { useEffect } from 'react';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nimport \"./STLGenerator.css\"\r\n\r\nexport default function Viewer(props) {\r\n    useEffect(() => { }, [props.stlUrl, props.fetchStlError]);\r\n\r\n    if (props.fetchStlError) {\r\n        return (<>\r\n            <Alert variant='danger'>\r\n                Возникла ошибка генерации модели, пожалуйста, попробуйте снова.\r\n            </Alert>\r\n        </>)\r\n    }\r\n\r\n    if (props.stlUrl === '') {\r\n        return (<>\r\n            <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n        </>)\r\n    }\r\n    return (\r\n        <>\r\n            <ModelViewer width=\"100%\" aspectgRatio=\"100%\" rotationSpeeds={[0, 0, 0]} initControlPosition={[0, 0, 0.4]} backgroundColor=\"#ffffff\" url={props.stlUrl} />\r\n        </>\r\n    );\r\n}\r\n","import React, { useContext, useState, useEffect, useReducer } from 'react';\r\nimport { UserContext } from '../App/useUser'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nimport SettingsForm from './SettingsForm';\r\nimport \"./STLGenerator.css\"\r\nimport { fiestaCloudBackend } from '../App/config';\r\nimport Viewer from './Viewer';\r\nimport * as Sentry from \"@sentry/react\";\r\n\r\n\r\nfunction reducer(state, item) {\r\n  return { ...state, ...item }\r\n}\r\n\r\nfunction fetchRetry(url, options = {}, retries = 3) {\r\n  return fetch(url, options)\r\n    .then(res => {\r\n      if (res.ok) return res.json()\r\n      if (retries > 0) {\r\n        return fetchRetry(url, options, retries - 1)\r\n      } else {\r\n        throw new Error(res)\r\n      }\r\n    })\r\n    .catch(error => {\r\n      if (retries > 0) {\r\n        return fetchRetry(url, options, retries - 1)\r\n      } else {\r\n        throw new Error(error)\r\n      }\r\n    }\r\n    )\r\n}\r\n\r\nexport default function STLGenerator() {\r\n  const { user } = useContext(UserContext);\r\n  const user_id = user.user.uid;\r\n  const [stlUrl, setStlUrl] = useState('');\r\n  const [stlSettings, setStlSettings] = useReducer(reducer, {});\r\n  const [fetchStlError, setfetchStlError] = useState(false);\r\n\r\n  function sendGenerateSTL(uid, settings) {\r\n    return fetchRetry(fiestaCloudBackend + '/api/stl-generator/', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(settings),\r\n    })\r\n      .catch(error => {\r\n        setfetchStlError(true);\r\n        Sentry.captureException(new Error(error));\r\n      })\r\n      .then(data => {\r\n        return data\r\n      })\r\n  }\r\n\r\n  function updateSTL() {\r\n    setStlUrl('');\r\n    sendGenerateSTL(user_id, stlSettings).then(data => { if (data) { setfetchStlError(false); setStlUrl(data.url) } });\r\n  }\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    sendGenerateSTL(user_id, {}).then(data => {\r\n      if (mounted && data != null) {\r\n        setStlUrl(data.url)\r\n      }\r\n    });\r\n    return () => mounted = false;\r\n  }, [user_id])\r\n\r\n  return (\r\n    <>\r\n      <Container fluid=\"xl\" className=\"stl-generator-wrapper\">\r\n        <Row>\r\n          <Col sm={7}>\r\n            <Viewer fetchStlError={fetchStlError} stlUrl={stlUrl}></Viewer>\r\n          </Col>\r\n          <Col sm={5} >\r\n            <SettingsForm updateSTL={updateSTL} setStlSettings={setStlSettings} />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col >\r\n            <Button as=\"a\" target=\"_blank\" href={stlUrl} className=\"control-button\" size=\"lg\" variant=\"primary\" download>Скачать STL</Button>\r\n            <Button disabled={true} className=\"control-button\" size=\"lg\" variant=\"primary\">Отправить в печать</Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nimport './App.css';\r\nimport Login from '../Login/Login';\r\nimport DrawPrint from '../DrawPrint/DrawPrint';\r\nimport Library from '../Library/Library';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport Slicer from '../Slicer/Slicer';\r\nimport { useUser, UserContext } from './useUser';\r\nimport DrawApp from '../DrawApp/DrawApp';\r\nimport STLGenerator from '../STLGenerator/STLGenerator';\r\n\r\nfunction App() {\r\n  const { user, setUser, removeUser } = useUser();\r\n\r\n  if (!user) {\r\n    return <Login setUser={setUser} />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <UserContext.Provider value={{ user, setUser, removeUser }} >\r\n\r\n        <BrowserRouter>\r\n          <Switch>\r\n            <Route exact path=\"/draw\">\r\n              <DrawApp />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Navigation />\r\n              <Route exact path=\"/\">\r\n                {/* <Library /> */}\r\n                <DrawPrint />\r\n              </Route>\r\n              <Route path=\"/draw-print\">\r\n                <DrawPrint />\r\n              </Route>\r\n              <Route path=\"/library\">\r\n                <Library />\r\n              </Route>\r\n              <Route path=\"/slicer\">\r\n                <Slicer />\r\n              </Route>\r\n              <Route path=\"/stl-generator\">\r\n                <STLGenerator />\r\n              </Route>\r\n            </Route>\r\n\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </UserContext.Provider>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as Sentry from \"@sentry/react\";\r\nimport { Integrations } from \"@sentry/tracing\";\r\n\r\nSentry.init({\r\n  dsn: \"https://671da45dc307486090d441b0ff074028@o528559.ingest.sentry.io/5646853\",\r\n  integrations: [new Integrations.BrowserTracing()],\r\n  tracesSampleRate: 1.0,\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}